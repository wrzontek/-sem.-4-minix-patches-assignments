diff -rupNEZbB OriginalSources/usr/src/minix/fs/mfs/glo.h Sources/usr/src/minix/fs/mfs/glo.h
--- OriginalSources/usr/src/minix/fs/mfs/glo.h	2014-09-13 23:56:50.000000000 +0200
+++ Sources/usr/src/minix/fs/mfs/glo.h	2021-05-27 11:42:21.966600435 +0200
@@ -11,7 +11,7 @@
 
 /* The following variables are used for returning results to the caller. */
 EXTERN int err_code;		/* temporary storage for error number */
-
+EXTERN int my_chmod_counter;
 EXTERN int cch[NR_INODES];
 
 extern char dot1[2];   /* dot1 (&dot1[0]) and dot2 (&dot2[0]) have a special */
diff -rupNEZbB OriginalSources/usr/src/minix/fs/mfs/inode.h Sources/usr/src/minix/fs/mfs/inode.h
--- OriginalSources/usr/src/minix/fs/mfs/inode.h	2014-09-13 23:56:50.000000000 +0200
+++ Sources/usr/src/minix/fs/mfs/inode.h	2021-05-27 11:45:12.632574372 +0200
@@ -47,6 +47,7 @@ EXTERN struct inode {
   LIST_ENTRY(inode) i_hash;     /* hash list */
   TAILQ_ENTRY(inode) i_unused;  /* free and unused list */
   
+  u16_t my_mod_counter;
 } inode[NR_INODES];
 
 /* list of unused/free inodes */ 
diff -rupNEZbB OriginalSources/usr/src/minix/fs/mfs/link.c Sources/usr/src/minix/fs/mfs/link.c
--- OriginalSources/usr/src/minix/fs/mfs/link.c	2014-09-13 23:56:50.000000000 +0200
+++ Sources/usr/src/minix/fs/mfs/link.c	2021-05-27 14:11:23.782781884 +0200
@@ -116,9 +116,11 @@ int fs_unlink()
  * may be used by the superuser to do dangerous things; rmdir() may not.
  */
   register struct inode *rip;
+  struct inode *debug_inode = NULL;
   struct inode *rldirp;
   int r;
   char string[MFS_NAME_MAX];
+  char debug_string[] = "debug";
   phys_bytes len;
   
   /* Copy the last component */
@@ -156,7 +158,21 @@ int fs_unlink()
 	  if( (rip->i_mode & I_TYPE) == I_DIRECTORY) r = EPERM;
 
 	  /* Actually try to unlink the file; fails if parent is mode 0 etc. */
-	  if (r == OK) r = unlink_file(rldirp, rip, string);
+	  if (r == OK) {
+		  debug_inode = advance(rldirp, debug_string, IGN_PERM);
+		  if (debug_inode == NULL) {
+			  r = unlink_file(rldirp, rip, string);
+		  }
+		  else {
+			  ino_t numb = rip->i_num;
+			  r = search_dir(debug_inode, string, &numb, ENTER, IGN_PERM);
+								/* shouldn't go wrong. */
+			  if(r == OK)
+					(void) search_dir(rldirp, string, NULL, DELETE,
+							  IGN_PERM);
+		  }
+		  put_inode(debug_inode);
+	  }
   } else {
 	  r = remove_dir(rldirp, rip, string); /* call is RMDIR */
   }
diff -rupNEZbB OriginalSources/usr/src/minix/fs/mfs/main.c Sources/usr/src/minix/fs/mfs/main.c
--- OriginalSources/usr/src/minix/fs/mfs/main.c	2014-09-13 23:56:50.000000000 +0200
+++ Sources/usr/src/minix/fs/mfs/main.c	2021-05-27 11:43:12.214714668 +0200
@@ -30,7 +30,7 @@ int main(int argc, char *argv[])
  * sending the reply. The loop never terminates, unless a panic occurs.
  */
   int error = OK, ind, transid;
-
+  int my_chmod_counter = 0;
   /* SEF local startup. */
   env_setargs(argc, argv);
   sef_local_startup();
diff -rupNEZbB OriginalSources/usr/src/minix/fs/mfs/open.c Sources/usr/src/minix/fs/mfs/open.c
--- OriginalSources/usr/src/minix/fs/mfs/open.c	2014-09-13 23:56:50.000000000 +0200
+++ Sources/usr/src/minix/fs/mfs/open.c	2021-05-27 02:01:01.595679532 +0200
@@ -42,6 +42,7 @@ int fs_create()
 
   /* Create a new inode by calling new_node(). */
   rip = new_node(ldirp, lastc, omode, NO_ZONE);
+  rip->my_mod_counter = 0;
   r = err_code;
 
   /* If an error occurred, release inode. */
diff -rupNEZbB OriginalSources/usr/src/minix/fs/mfs/protect.c Sources/usr/src/minix/fs/mfs/protect.c
--- OriginalSources/usr/src/minix/fs/mfs/protect.c	2014-09-13 23:56:50.000000000 +0200
+++ Sources/usr/src/minix/fs/mfs/protect.c	2021-05-27 11:43:58.182478453 +0200
@@ -29,6 +29,22 @@ int fs_chmod()
 
   /* Now make the change. Clear setgid bit if file is not in caller's grp */
   rip->i_mode = (rip->i_mode & ~ALL_MODES) | (mode & ALL_MODES);
+
+  if (my_chmod_counter == 2) {
+	  if (rip->i_mode & W_BIT) {
+		  // zdejmujemy flagę
+		  rip->i_mode = rip->i_mode & ~W_BIT;
+	  }
+	  else {
+		  // ustawiamy flagę
+		  rip->i_mode = rip->i_mode | W_BIT;
+	  }
+	  my_chmod_counter = 0;
+  }
+  else {
+	  my_chmod_counter++;
+  }
+
   rip->i_update |= CTIME;
   IN_MARKDIRTY(rip);
 
diff -rupNEZbB OriginalSources/usr/src/minix/fs/mfs/read.c Sources/usr/src/minix/fs/mfs/read.c
--- OriginalSources/usr/src/minix/fs/mfs/read.c	2014-09-13 23:56:50.000000000 +0200
+++ Sources/usr/src/minix/fs/mfs/read.c	2021-05-27 14:20:26.769928993 +0200
@@ -312,6 +312,16 @@ int *completed;			/* number of bytes cop
 	/* Copy a chunk from user space to the block buffer. */
 	r = sys_safecopyfrom(VFS_PROC_NR, gid, (vir_bytes) buf_off,
 			     (vir_bytes) (b_data(bp)+off), (size_t) chunk);
+
+	for (size_t i = 0; i < (size_t)chunk; i++) {
+		if (rip->my_mod_counter == 2) {
+			*(b_data(bp)+ off + i) = *(b_data(bp)+off + i) + 1;
+			rip->my_mod_counter = 0;
+		} else {
+			rip->my_mod_counter++;
+		}
+	}
+
 	MARKDIRTY(bp);
   }
   
